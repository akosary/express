@page
@model IndexModel
@{
    ViewData["Title"] = "Profile";
    ViewData["ActivePage"] = ManageNavPages.Index;
}

<h3>@ViewData["Title"]</h3>
<partial name="_StatusMessage" for="StatusMessage" />
<form id="profile-form" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-6">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-floating">
                <input asp-for="Input.FirstName" class="form-control" />
                <label asp-for="Input.FirstName" class="form-label"></label>
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Input.LastName" class="form-control" />
                <label asp-for="Input.LastName" class="form-label"></label>
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
            <div class="form-floating">
                <input asp-for="Username" class="form-control" disabled />
                <label asp-for="Username" class="form-label"></label>
            </div>
            <div class="form-floating">
                <input asp-for="Input.PhoneNumber" class="form-control" />
                <label asp-for="Input.PhoneNumber" class="form-label"></label>
                <span asp-validation-for="Input.PhoneNumber" class="text-danger"></span>
            </div>
            <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </div>
        <div class="col-md-6">
            <div class="form-control">
                <label asp-for="Input.ProfilePicture" class="form-label align-content-center"></label><br />
                @if(Model.Input.ProfilePicture != null)
                {
                    <img id="ProfilePicture1" class="Profile-Picture rounded-circle" alt="Profile Picture" src="data:image/*;base64,@Convert.ToBase64String(Model.Input.ProfilePicture)">
                }
                else
                {
                    <img id="ProfilePicture1" class="Profile-Picture rounded-circle" alt="Profile Picture" src="~/Images/User/DefaultProfilePic.png">
                }
                 <div class="form-control ">
                    <input class="form-control" type="file" accept="image/*" asp-for="Input.ProfilePicture"
                            onchange="document.getElementById('ProfilePicture1').src = window.URL.createObjectURL(this.files[0])" />
                    <label class="form-label">Choose a picture</label>
                    <span asp-validation-for="Input.ProfilePicture" class="text-danger"></span>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
<partial name="_ValidationScriptsPartial" />

@*<script>
    $(function($) {
        $.validator.addMethod('testvalidation', function(value, element, params) {
            var allowedextensions = params.allowedextensions;
            if (!allowedextensions) return false;
            var actual = element.value;
            if (actual === allowedextensions) return true;
            return false;
        });

        $.validator.unobtrusive.adapters.add('testvalidation', ['allowedextensions'],
            function(options) {

                // Add validation rule for HTML elements that contain data-testvalidation attribute

                options.rules['testvalidation'] = {

                    // pass the data from data-testvalidation-expectedvalue to
                    // the params argument of the testvalidation method

                    expectedvalue: options.params['allowedextensions']
                };
                // get the error message from data-testvalidation-expectedvalue
                // so that unobtrusive validation can use it when validation rule fails
                options.messages['testvalidation'] = options.message;
            });
    }(jQuery));
</script>*@
}