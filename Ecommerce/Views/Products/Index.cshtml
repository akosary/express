@using Ecommerce.Constants
@model Ecommerce.ViewModels.ProductViewModel.ListFilterProductVM
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Index";
}

<h1>Products</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@if(!Model.IndexProductVMs.Any())
{
    <div class="alert alert-warning" role="alert">
        There is no department to show
    </div>
}
<div class="col-lg-6 col-6 text-left">
    <form asp-action="Index" method="post">
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Search for products" name="search" />
            <input type="submit" class="btn btn-primary" value="search"/>
        </div>
    </form>
</div>

<div class="col-lg-6 col-6 text-left">
    <form asp-action="GetProductCategory" method="post">
        <div class="form-group">
            <label asp-for="DepartmentId" class="control-label"></label>
            <select asp-for="DepartmentId" class="form-control" asp-items="@(new SelectList(Model.Departments, "Id", "Name"))">
                <option>Choose a Drpartment</option>
            </select>
        </div>
        <div class="form-group">
            <label asp-for="CategoryId" class="control-label"></label>
            <select asp-for="CategoryId" class="form-control" asp-items="@(new SelectList(Model.Categories, "Id", "Name"))">
                <option>Choose a Category</option>
            </select>
        </div>
        <div class="input-group">
            <input type="submit" class="btn btn-primary" value="Filter" />
        </div>
    </form>
</div>
@foreach (var product in Model.IndexProductVMs)
{
    <div class="card" style="width: 18rem;">
        <img src="@product.CoverImgPath" class="card-img-top" alt="...">
        <div class="card-body">
            <h5 class="card-title">@product.Name</h5>
            <p class="card-text">@product.Description</p>
            <p class="card-text">Brand: @product.Brand.Name</p>
            <p class="card-text">Category: @product.Category.Name</p>
            <a asp-action="Details" class="w-100 btn btn-primary" asp-route-id="@product.Id">Details</a>
            @if(AuthorizationService.AuthorizeAsync(User, Permissions.Products.Edit).Result.Succeeded)
            {
                <a asp-action="Edit" class="btn btn-warning" asp-route-id="@product.Id">Edit</a>
            }
            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Products.Delete).Result.Succeeded)
            {
                <a asp-action="Delete" class="btn btn-danger" asp-route-id="@product.Id">Delete</a>
            }

        </div>  
    </div>
}

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#DepartmentId').on('change', function () {
                var deptId = $(this).val();
                var catLst = $('#CategoryId');

                catLst.empty();
                if (deptId !== '') {
                    $.ajax({
                        url: '/Products/GetCategories?deptid=' + deptId,
                        success: function (cats) {
                            $.each(cats, function (i, cat) {
                                catLst.append($('<option></option>').attr('value', cat.id).text(cat.name));
                            });
                        },
                        error: function () {
                            alert('Something wrong');
                        }
                    });
                }
            });
        });
    </script>


@*<script>
    $(document).ready(function () {
        $('#CategoryId').on('change', function () {
            var catId = $(this).val();
            //var catLst = $('#CategoryId');

            //catLst.empty();
            //if (catId !== '') {
                $.ajax({
                    url: '/Products/GetProductCategory?catid=' + catId,
                    success: function (products) {
                        //$.each(cats, function (i, cat) {
                        //    catLst.append($('<option></option>').attr('value', cat.id).text(cat.name));
                        //});
                        console.log(products)
                    },
                    error: function () {
                        alert('Something wrong');
                    }
                });
            //}
        });
    });
</script>*@

@*<script>
    $(document).ready(function () {
        $('#CategoryId').on('change', function () {
            var catName = $('option:selected', (this)).text();
            //var catLst = $('#CategoryId');

            //var catName = $('#CategoryId option: selected').text();
            //catLst.empty();
            //if (catId !== '') {
            $.ajax({
                url: '/Products/GetProductCategory?catname=' + catName,
                success: function (products) {
                    //$.each(cats, function (i, cat) {
                    //    catLst.append($('<option></option>').attr('value', cat.id).text(cat.name));
                    //});
                    console.log(products)
                },
                error: function () {
                    alert('Something wrong');
                }
            });
            //}
        });
    });
</script>*@

}